@page "/movies/create"
@inject TestApp.Data.ApplicationDbContext DB
@using AuthReviews.Components.Movies
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h4>Movie</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Movie" OnValidSubmit="AddMovie" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="title" class="form-label">Title:</label> 
                <InputText id="title" @bind-Value="Movie.Title" class="form-control" /> 
                <ValidationMessage For="() => Movie.Title" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="description" class="form-label">Description:</label> 
                <InputText id="description" @bind-Value="Movie.Description" class="form-control" /> 
                <ValidationMessage For="() => Movie.Description" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="releasedate" class="form-label">ReleaseDate:</label> 
                <InputDate id="releasedate" @bind-Value="Movie.ReleaseDate" class="form-control" /> 
                <ValidationMessage For="() => Movie.ReleaseDate" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="image" class="form-label">Image URL:</label> 
                <InputText id="image" @bind-Value="Movie.Image" class="form-control" /> 
                <ValidationMessage For="() => Movie.Image" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/movies">Back to List</a>
</div>

@code {

    [SupplyParameterFromForm]
    public Movie Movie { get; set; } = new();

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddMovie()
    {
        Movie.Rate = null;
        Movie.RatesNumber = 0;
        DB.Movie.Add(Movie);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/movies");
    }
}
